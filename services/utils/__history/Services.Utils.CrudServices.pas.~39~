unit Services.Utils.CrudServices;

interface

uses
  System.SysUtils,
  IdHTTP,
  System.Generics.Collections,
  System.JSON,
  REST.JSON,
  Services.Utils.BaseService;

type
  CrudService = class(BaseService)
    function baseCrudPath(): string; virtual; abstract;
    function GetList(Page: Integer = 1; PerPage: Integer = 30; Options: TObject = nil): string;
  end;

implementation

function CrudService.GetList(Page: Integer = 1; PerPage: Integer = 30; Options: TObject = nil): string;
var
  IdHTTP   : TIdHTTP;
  JSONValue: TJSONValue;
begin
  IdHTTP := TIdHTTP.Create(nil);
  try
    try
      IdHTTP.Get(baseCrudPath());

      if IdHTTP.ResponseCode = 200 then
      begin
        JSONValue := TJSONObject.ParseJSONValue(IdHTTP.ResponseText);

      end;

    except
      on E: Exception do
        Result := 'Error: ' + E.Message;
    end;
  finally
    IdHTTP.Free;
  end;
end;

end.
